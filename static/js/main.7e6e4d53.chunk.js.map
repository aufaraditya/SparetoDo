{"version":3,"sources":["components/Filter.js","components/Forms.js","components/Todo.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","time","value","Forms","todos","setTodos","inputText","inputTime","setInputText","setInputTime","setFilter","filter","handleFilter","Form","Row","Col","xs","Control","id","maxlength","name","onChange","e","console","log","target","placeholder","InputGroup","Text","OverlayTrigger","placement","overlay","Tooltip","FormControl","min","max","type","Button","variant","onClick","preventDefault","text","completed","uuid","as","map","todo","Todo","Check","checked","ListGroup","Item","ToDoList","filteredTodos","LOCAL_STORAGE_KEY","App","useState","setFilteredTodos","useEffect","storageTodos","JSON","parse","localStorage","getItem","getLocalStorage","setItem","stringify","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e6e4d53.chunk.js","sourcesContent":["import React from 'react';\n\n\n\n\nfunction Filter({time}) {\n    return (\n        <option value={time} >{time}</option>\n    );\n  }\n  \n  export default Filter;","import React, {useState} from 'react';\nimport {v4 as uuid} from 'uuid'\nimport { Form } from 'react-bootstrap';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Clock, FilterLeft } from 'react-bootstrap-icons';\nimport Filter from './Filter';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n\nfunction Forms({todos, setTodos, inputText, inputTime, setInputText, setInputTime, filter, setFilter, handleFilter}) {\n\n    function inputTextHandler(e){\n        console.log(e.target.value);\n        setInputText(e.target.value);\n        \n    };\n\n    function inputTimeHandler(e){\n        setInputTime(e.target.value);\n        \n    };\n\n    function handleSubmit(e){\n    \n        e.preventDefault();\n        setTodos([\n            ...todos,{text:inputText, time:inputTime, completed:false,id: uuid()}\n        ]);\n        setInputText(\"\");\n        setInputTime(\"\");\n        \n    };\n\n    function handleFilter(e){\n\n        setFilter(e.target.value);\n    };\n\n\n    return (\n        <Form>\n            <Row >\n                <Col>\n                </Col>\n                <Col>\n                </Col>\n                <Col xs={5}>\n                    <Form.Control id=\"inlineFormInputName\" maxlength=\"65\" value={inputText} name=\"activity\" onChange={inputTextHandler} placeholder=\"Add Todo\" />\n                </Col>\n                <Col xs={2}>\n                    <InputGroup >\n                        <InputGroup.Text>\n                            <Clock/>\n                        </InputGroup.Text>\n                        <OverlayTrigger key=\"top\" placement=\"top\" overlay={\n                            <Tooltip id={\"tooltip-top\"}>\n                               Minute Estimation\n                            </Tooltip>}\n                        >\n                            <FormControl min=\"1\" max=\"999999\" type=\"number\" value={inputTime} onChange={inputTimeHandler} name=\"time\" placeholder=\"Min. Spent\"/>\n                        </OverlayTrigger>\n                    </InputGroup>\n                </Col>\n                <Col xs=\"auto\">\n                    <Button id=\"button-add\" variant=\"secondary\" onClick={handleSubmit} >+</Button>\n                </Col>\n                <Col xs={2}>\n                    <InputGroup>                    \n                        <InputGroup.Text>\n                            <FilterLeft/>\n                        </InputGroup.Text>\n                        <OverlayTrigger key=\"top\" placement=\"top\" overlay={\n                            <Tooltip id={\"tooltip-top\"}>\n                               Filter by Minute\n                            </Tooltip>}>\n                            <Form.Control id=\"Filter\" as=\"select\" onChange={handleFilter}>\n                                <option value=\"All\">All</option>\n                                 {todos.map((todo) => (\n                                     <Filter time={todo.time}/>\n                                     ))}\n                            </Form.Control>\n                        </OverlayTrigger>\n                    </InputGroup>\n                </Col>\n                <Col>\n                </Col>\n                <Col>\n                </Col>\n            </Row>\n        </Form>\n    );\n  }\n  \n  export default Forms;","import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { Form } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { Trash, CheckLg } from \"react-bootstrap-icons\";\n\n\n\n\n\nfunction Todo({text, todo, time, todos, setTodos}) {\n\n    function handleDelete(){\n        setTodos(todos.filter((e) => e.id !== todo.id ));\n\n    };\n\n    function handleComplete(e){\n        setTodos(todos.map((e) => {\n            if(e.id === todo.id){\n                return {\n                    ...e, completed: !e.completed //The Opposite\n                };\n            }\n            return e;\n        } ));\n    };\n\n\n\n    return (\n        <Row>\n            <Col>\n            </Col>\n            <Col>\n                <Form.Check id= \"toogle-checked\" onChange={handleComplete} checked = {todo.completed ? true : false} />    \n            </Col>\n            <Col xs={5} >\n                <ListGroup>\n                    <ListGroup.Item variant=\"dark\" id = {todo.completed ? \"Completed\": ''} >{text}</ListGroup.Item>\n                </ListGroup>\n            </Col>\n            <Col xs={1}>\n                <ListGroup>\n                    <ListGroup.Item variant=\"dark\" id = {todo.completed ? \"Completed\": ''}>{time}</ListGroup.Item>\n                </ListGroup>\n            </Col>\n            <Col xs=\"auto\" >\n                <Button  variant=\"secondary\" onClick={handleDelete}>\n                    <Trash/>\n                </Button>\n            </Col>\n            <Col xs={2}>\n            </Col>\n            <Col>\n            </Col>\n            <Col>\n            </Col>\n        </Row>\n    );\n  }\n  \n  export default Todo;","import React from 'react';\nimport Todo from './Todo';\n\n\n\n\nfunction ToDoList({todos, setTodos, filteredTodos}) {\n    return (\n      <div>\n         {filteredTodos.map((todo) => (\n            <Todo key={todo.id} text={todo.text} time={todo.time} todo={todo} todos = {todos} setTodos={setTodos}/>\n         ))}\n      </div>\n    );\n  }\n  \n  export default ToDoList;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Forms from './components/Forms';\nimport ToDoList from './components/ToDoList';\n\n\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\n\n\nfunction App() {\n  const[inputText, setInputText] = useState(\"\");\n  const[inputTime, setInputTime] = useState(\"\");\n  const[todos, setTodos] = useState([]);\n  const[filteredTodos, setFilteredTodos] = useState([]);\n  const[filter,setFilter] = useState(\"All\");\n\n  useEffect(() => {\n    getLocalStorage();\n  }, []);\n\n  useEffect(() => {\n    handleFilteredTodos();\n    setLocalStorage();\n  }, [todos,filter]);\n\n\n  function setLocalStorage(){\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  };\n\n  function getLocalStorage(){\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if(storageTodos){\n      setTodos(storageTodos);\n    }\n  }\n\n  function handleFilteredTodos(){\n      if (filter === 'All'){\n        setFilteredTodos(todos);\n      }\n      else{\n        setFilteredTodos(todos.filter((todo) => todo.time === filter));\n      }\n  };\n\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Spare ToDo</h1>\n        <h5>Spend Your Spare Time Wisely</h5>\n      </header>\n      <Forms \n      todos={todos}\n      setTodos={setTodos}\n      inputText={inputText}\n      inputTime={inputTime}\n      setInputText={setInputText} \n      setInputTime={setInputTime} \n      filter={filter}\n      setFilter={setFilter}\n      />\n      <ToDoList todos={todos} setTodos={setTodos} filteredTodos={filteredTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}